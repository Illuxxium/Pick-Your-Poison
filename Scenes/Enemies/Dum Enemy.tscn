[gd_scene load_steps=8 format=2]

[ext_resource path="res://Scenes/Enemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scenes/Enemy Weapons/Dum Emeny Weapon.tscn" type="PackedScene" id=2]
[ext_resource path="res://Graphics/Sprite-3.png" type="Texture" id=3]
[ext_resource path="res://Graphics/Sprite-0001.png" type="Texture" id=4]
[ext_resource path="res://Graphics/Sprite-002.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody2D

export var movementSpeed: float = 300
var targetRotation: float
var tween

#func _ready():
#	tween = Tween.new()
#	add_child(tween)
#	tween.start()

#warning-ignore:unused_argument
#func _physics_process(delta: float) -> void:
#	var movementVector: Vector2 = Vector2()
#
#	movementVector.y -= Input.get_action_strength(\"move_up\")
#	movementVector.y += Input.get_action_strength(\"move_down\")
#	movementVector.x -= Input.get_action_strength(\"move_left\")
#	movementVector.x += Input.get_action_strength(\"move_right\")
#
#	move_and_slide(movementVector.normalized() * movementSpeed)
#
#	match(Vector2(ceil(movementVector.x), ceil(movementVector.y))):
#		Vector2(0, -1):
#			if(rotation_degrees >= -180):
#				targetRotation = 0
#			else:
#				targetRotation = -360
#		Vector2(1, -1):
#			if(rotation_degrees > -135):
#				targetRotation = 45
#			else:
#				targetRotation = -315
#		Vector2(1, 0):
#			if(rotation_degrees > -90):
#				targetRotation = 90
#			else:
#				targetRotation = -270
#		Vector2(1, 1):
#			if(rotation_degrees > -45):
#				targetRotation = 135
#			else:
#				targetRotation = -225
#		Vector2(0, 1):
#			if(rotation_degrees > 0):
#				targetRotation = 180
#			else:
#				targetRotation = -180
#		Vector2(-1, -1):
#			if(rotation_degrees > 45):
#				targetRotation = 315
#			else:
#				targetRotation = -45
#		Vector2(-1,0):
#			if(rotation_degrees > 90):
#				targetRotation = 270
#			else:
#				targetRotation = -90
#		Vector2(-1, 1):
#			if(rotation_degrees > 135):
#				targetRotation = 225
#			else:
#				targetRotation = -135
#
#	tween.interpolate_property(self, \"rotation_degrees\", null, targetRotation, .1, Tween.TRANS_LINEAR, Tween.EASE_IN_OUT)
#	rotation_degrees = fmod(rotation_degrees, 360)

func _on_Area2D_area_entered(area: Area2D) -> void:
	print(area)
	rotate(.5)
	area.get_parent().queue_free()"

[sub_resource type="GDScript" id=2]

script/source = "extends Node2D

func _process(delta: float) -> void:
	global_rotation = 0"

[node name="Dum Enemy" instance=ExtResource( 1 )]
collision_layer = 0
collision_mask = 0
script = SubResource( 1 )
movementSpeed = null

[node name="Area2D" parent="." index="3"]
editor/display_folded = true
collision_layer = 4
collision_mask = 2

[node name="Weapon Manager" parent="." index="4"]
editor/display_folded = true
mainWeapon = ExtResource( 2 )
hasAltWeapon = false

[node name="Main Weapon Spawner" parent="Weapon Manager" index="0"]
position = Vector2( 0, 7 )

[node name="NO ROTATE 4 U" type="Node2D" parent="." index="5"]
script = SubResource( 2 )

[node name="Health Bar" type="TextureProgress" parent="NO ROTATE 4 U" index="0"]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -50.0
margin_top = 50.0
margin_right = 50.0
margin_bottom = 70.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
min_value = 0.0
max_value = 100.0
step = 1.0
page = 0.0
value = 50.0
exp_edit = false
rounded = false
allow_greater = false
allow_lesser = false
texture_under = ExtResource( 3 )
texture_over = ExtResource( 4 )
texture_progress = ExtResource( 5 )
tint_under = Color( 1, 1, 1, 1 )
tint_over = Color( 1, 1, 1, 1 )
tint_progress = Color( 1, 1, 1, 1 )
radial_fill_degrees = 360.0
radial_center_offset = Vector2( 0, 0 )
nine_patch_stretch = true
stretch_margin_left = 10
stretch_margin_top = 10
stretch_margin_right = 10
stretch_margin_bottom = 10

