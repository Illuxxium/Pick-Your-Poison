[gd_scene load_steps=9 format=2]

[ext_resource path="res://Graphics/PNG/playerShip1_blue.png" type="Texture" id=1]
[ext_resource path="res://Scenes/Player Weapons/Basic Player Weapon.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/Weapon.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody2D

export var movementSpeed: float = 300
var targetRotation: float
var tween
var f11down = false
func _ready():
	tween = Tween.new()
	add_child(tween)
	tween.start()

#warning-ignore:unused_argument
func _physics_process(delta: float) -> void:
	if(Input.is_key_pressed(KEY_F11) && !f11down):
		OS.window_fullscreen = true
		f11down = true
	else:
		f11down = false
	var movementVector: Vector2 = Vector2()

	movementVector.y -= Input.get_action_strength(\"move_up\")
	movementVector.y += Input.get_action_strength(\"move_down\")
	movementVector.x -= Input.get_action_strength(\"move_left\")
	movementVector.x += Input.get_action_strength(\"move_right\")

	move_and_slide(movementVector.normalized() * movementSpeed)

	match(Vector2(ceil(movementVector.x), ceil(movementVector.y))):
		Vector2(0, -1):
			if(rotation_degrees >= -180):
				targetRotation = 0
			else:
				targetRotation = -360
		Vector2(1, -1):
			if(rotation_degrees > -135):
				targetRotation = 45
			else:
				targetRotation = -315
		Vector2(1, 0):
			if(rotation_degrees > -90):
				targetRotation = 90
			else:
				targetRotation = -270
		Vector2(1, 1):
			if(rotation_degrees > -45):
				targetRotation = 135
			else:
				targetRotation = -225
		Vector2(0, 1):
			if(rotation_degrees > 0):
				targetRotation = 180
			else:
				targetRotation = -180
		Vector2(-1, -1):
			if(rotation_degrees > 45):
				targetRotation = 315
			else:
				targetRotation = -45
		Vector2(-1,0):
			if(rotation_degrees > 90):
				targetRotation = 270
			else:
				targetRotation = -90
		Vector2(-1, 1):
			if(rotation_degrees > 135):
				targetRotation = 225
			else:
				targetRotation = -135

#	print(targetRotation, \"    \", rotation_degrees)
	tween.interpolate_property(self, \"rotation_degrees\", null, targetRotation, .1, Tween.TRANS_LINEAR, Tween.EASE_IN_OUT)
	rotation_degrees = fmod(rotation_degrees, 360)

func _on_Area2D_area_entered(area: Area2D) -> void:
	print(area, \" AAAA\")
	area.get_parent().queue_free()
"

[sub_resource type="SpriteFrames" id=2]

animations = [ {
"frames": [ ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="Animation" id=3]

resource_name = "New Anim"
length = 2.0
loop = true
step = 0.1

[sub_resource type="RectangleShape2D" id=4]

custom_solver_bias = 0.0
extents = Vector2( 0, 0 )

[sub_resource type="GDScript" id=5]

script/source = "extends Position2D

export var mainWeapon: PackedScene
export var altWeapon: PackedScene

func _ready() -> void:
	spawnWeapons()

func setWeapon(var mWeapon: PackedScene = mainWeapon, var aWeapon: PackedScene = altWeapon):
	if(mWeapon != null):
		mainWeapon = mWeapon
	if(aWeapon != null):
		altWeapon = aWeapon
	spawnWeapons()

func spawnWeapons():
	if(mainWeapon != null):
		var children = $\"Main Weapon Spawner\".get_children()
		for child in children:
			child.free()
		$\"Main Weapon Spawner\".add_child(mainWeapon.instance())

	if(altWeapon != null):
		var children = $\"Alt Weapon Spawner\".get_children()
		for child in children:
			child.free()
		$\"Alt Weapon Spawner\".add_child(altWeapon.instance())

func _unhandled_input(event: InputEvent) -> void:
#	print(event)
	if(event.is_action_pressed(\"fire_main\")):
		$\"Main Weapon Spawner\".get_child(0).startFire()
	if(event.is_action_released(\"fire_main\")):
		$\"Main Weapon Spawner\".get_child(0).endFire()
	if(event.is_action_pressed(\"fire_alt\")):
		$\"Alt Weapon Spawner\".get_child(0).startFire()
	if(event.is_action_released(\"fire_alt\")):
		$\"Alt Weapon Spawner\".get_child(0).endFire()"

[node name="Player" type="KinematicBody2D"]
input_pickable = false
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.08
motion/sync_to_physics = false
script = SubResource( 1 )
movementSpeed = 350.0

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = SubResource( 2 )
animation = "default"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
"anims/New Anim" = SubResource( 3 )
blend_times = [  ]

[node name="Camera2D" type="Camera2D" parent="."]
anchor_mode = 1
rotating = false
current = true
zoom = Vector2( 1.875, 1.8 )
limit_left = 0
limit_top = 0
limit_right = 1920
limit_bottom = 1080
limit_smoothed = false
drag_margin_h_enabled = false
drag_margin_v_enabled = false
smoothing_enabled = true
smoothing_speed = 5.0
offset_v = 0.0
offset_h = 0.0
drag_margin_left = 0.2
drag_margin_top = 0.2
drag_margin_right = 0.2
drag_margin_bottom = 0.2
editor_draw_screen = true
editor_draw_limits = true
editor_draw_drag_margin = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )
disabled = true

[node name="Area2D" type="Area2D" parent="."]
input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Area2D"]
build_mode = 0
polygon = PoolVector2Array( -45.1476, 23.9203, -7.686, 38.2238, 7.2986, 38.2238, 46.1224, 24.942, 50.2091, -5.02727, 12.407, -11.8385, 8.66084, -36.6993, -7.34544, -36.0182, -12.4538, -11.8385, -49.5748, -4.68671 )

[node name="Weapon Manager" type="Position2D" parent="."]
script = SubResource( 5 )
mainWeapon = ExtResource( 2 )
altWeapon = ExtResource( 3 )

[node name="Main Weapon Spawner" type="Position2D" parent="Weapon Manager"]
position = Vector2( -30, 10 )

[node name="Alt Weapon Spawner" type="Position2D" parent="Weapon Manager"]
position = Vector2( 30, 10 )

[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
