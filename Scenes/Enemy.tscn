[gd_scene load_steps=12 format=2]

[ext_resource path="res://Graphics/PNG/Enemies/enemyRed5.png" type="Texture" id=1]
[ext_resource path="res://Scenes/Emeny Weapon.tscn" type="PackedScene" id=2]
[ext_resource path="res://Graphics/Sprite-3.png" type="Texture" id=3]
[ext_resource path="res://Graphics/Sprite-0001.png" type="Texture" id=4]
[ext_resource path="res://Graphics/Sprite-002.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody2D

export var movementSpeed: float = 300
var targetRotation: float
var tween

#func _ready():
#	tween = Tween.new()
#	add_child(tween)
#	tween.start()

#warning-ignore:unused_argument
#func _physics_process(delta: float) -> void:
#	var movementVector: Vector2 = Vector2()
#
#	movementVector.y -= Input.get_action_strength(\"move_up\")
#	movementVector.y += Input.get_action_strength(\"move_down\")
#	movementVector.x -= Input.get_action_strength(\"move_left\")
#	movementVector.x += Input.get_action_strength(\"move_right\")
#
#	move_and_slide(movementVector.normalized() * movementSpeed)
#
#	match(Vector2(ceil(movementVector.x), ceil(movementVector.y))):
#		Vector2(0, -1):
#			if(rotation_degrees >= -180):
#				targetRotation = 0
#			else:
#				targetRotation = -360
#		Vector2(1, -1):
#			if(rotation_degrees > -135):
#				targetRotation = 45
#			else:
#				targetRotation = -315
#		Vector2(1, 0):
#			if(rotation_degrees > -90):
#				targetRotation = 90
#			else:
#				targetRotation = -270
#		Vector2(1, 1):
#			if(rotation_degrees > -45):
#				targetRotation = 135
#			else:
#				targetRotation = -225
#		Vector2(0, 1):
#			if(rotation_degrees > 0):
#				targetRotation = 180
#			else:
#				targetRotation = -180
#		Vector2(-1, -1):
#			if(rotation_degrees > 45):
#				targetRotation = 315
#			else:
#				targetRotation = -45
#		Vector2(-1,0):
#			if(rotation_degrees > 90):
#				targetRotation = 270
#			else:
#				targetRotation = -90
#		Vector2(-1, 1):
#			if(rotation_degrees > 135):
#				targetRotation = 225
#			else:
#				targetRotation = -135
#
#	tween.interpolate_property(self, \"rotation_degrees\", null, targetRotation, .1, Tween.TRANS_LINEAR, Tween.EASE_IN_OUT)
#	rotation_degrees = fmod(rotation_degrees, 360)

func _on_Area2D_area_entered(area: Area2D) -> void:
	print(area)
"

[sub_resource type="SpriteFrames" id=2]

animations = [ {
"frames": [ ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="Animation" id=3]

resource_name = "New Anim"
length = 2.0
loop = true
step = 0.1

[sub_resource type="RectangleShape2D" id=4]

custom_solver_bias = 0.0
extents = Vector2( 0, 0 )

[sub_resource type="GDScript" id=5]

script/source = "extends Position2D

export var mainWeapon: PackedScene
export var hasAltWeapon: bool = true
export var altWeapon: PackedScene

func _ready() -> void:
	spawnWeapons()
	$\"Main Weapon Spawner\".get_child(0).startFire()
	if(hasAltWeapon):
		$\"Alt Weapon Spawner\".get_child(0).startFire()


func setWeapon(var mWeapon: PackedScene = mainWeapon, var aWeapon: PackedScene = altWeapon):
	if(mWeapon != null):
		mainWeapon = mWeapon
	if(aWeapon != null):
		altWeapon = aWeapon
	spawnWeapons()

func spawnWeapons():
	if(mainWeapon != null):
		var children = $\"Main Weapon Spawner\".get_children()
		for child in children:
			child.free()
		$\"Main Weapon Spawner\".add_child(mainWeapon.instance())

	if(altWeapon != null):
		var children = $\"Alt Weapon Spawner\".get_children()
		for child in children:
			child.free()
		$\"Alt Weapon Spawner\".add_child(altWeapon.instance())

#func _unhandled_input(event: InputEvent) -> void:
##	print(event)
#	if(event.is_action_pressed(\"fire_main\")):
#		$\"Main Weapon Spawner\".get_child(0).startFire()
#	if(event.is_action_released(\"fire_main\")):
#		$\"Main Weapon Spawner\".get_child(0).endFire()
#	if(event.is_action_pressed(\"fire_alt\")):
#		$\"Alt Weapon Spawner\".get_child(0).startFire()
#	if(event.is_action_released(\"fire_alt\")):
#		$\"Alt Weapon Spawner\".get_child(0).endFire()"

[sub_resource type="GDScript" id=6]

script/source = "extends Node2D

func _process(delta: float) -> void:
	global_rotation = 0"

[node name="Enemy" type="KinematicBody2D"]
input_pickable = false
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.08
motion/sync_to_physics = false
script = SubResource( 1 )
movementSpeed = 350.0

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
rotation = -3.14159
frames = SubResource( 2 )
animation = "default"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
"anims/New Anim" = SubResource( 3 )
blend_times = [  ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )
disabled = true

[node name="Area2D" type="Area2D" parent="."]
editor/display_folded = true
input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Area2D"]
build_mode = 0
polygon = PoolVector2Array( -50, 42, -28, -33, -12, -42, 11, -42, 28, -32, 49, 42, 31, 42, -2, 42, -31, 42 )

[node name="Weapon Manager" type="Position2D" parent="."]
editor/display_folded = true
script = SubResource( 5 )
mainWeapon = null
hasAltWeapon = true
altWeapon = ExtResource( 2 )

[node name="Main Weapon Spawner" type="Position2D" parent="Weapon Manager"]
position = Vector2( -41, 34 )

[node name="Alt Weapon Spawner" type="Position2D" parent="Weapon Manager"]
position = Vector2( 39, 37 )

[node name="No Rotate" type="Node2D" parent="."]
script = SubResource( 6 )

[node name="TextureProgress" type="TextureProgress" parent="No Rotate"]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -50.0
margin_top = 50.0
rect_min_size = Vector2( 100, 25 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
min_value = 0.0
max_value = 100.0
step = 1.0
page = 0.0
value = 50.0
exp_edit = false
rounded = false
allow_greater = false
allow_lesser = false
texture_under = ExtResource( 3 )
texture_over = ExtResource( 4 )
texture_progress = ExtResource( 5 )
tint_under = Color( 1, 1, 1, 1 )
tint_over = Color( 1, 1, 1, 1 )
tint_progress = Color( 1, 1, 1, 1 )
radial_fill_degrees = 360.0
radial_center_offset = Vector2( 0, 0 )
nine_patch_stretch = true
stretch_margin_left = 10
stretch_margin_top = 10
stretch_margin_right = 10
stretch_margin_bottom = 10

[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
